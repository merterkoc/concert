// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/events": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    },
                    {
                        "AccessToken": [
                            "admin"
                        ]
                    }
                ],
                "description": "Get event by keyword",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ticketmaster-event"
                ],
                "summary": "Get event by keyword",
                "operationId": "get-event-by-keyword",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Keyword",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Location",
                        "name": "location",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Event"
                        }
                    }
                }
            }
        },
        "/events/{id}": {
            "get": {
                "description": "Get event by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ticketmaster-event"
                ],
                "summary": "Get event by id",
                "operationId": "get-event-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.EventDetail"
                        }
                    }
                }
            }
        },
        "/events/{id}/user": {
            "get": {
                "description": "Get event by user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Get event by user",
                "operationId": "get-event-by-user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.EventDetail"
                        }
                    }
                }
            }
        },
        "/events/{id}/{eventId}/join": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Join event",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Join event",
                "operationId": "join-event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "eventId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.EventDetail"
                        }
                    }
                }
            }
        },
        "/events/{id}/{eventId}/leave": {
            "post": {
                "description": "Leave event",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Leave event",
                "operationId": "leave-event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "eventId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.EventDetail"
                        }
                    }
                }
            }
        },
        "/identity/create": {
            "post": {
                "description": "Create user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "identity"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "CreateUserRequest",
                        "name": "createUserRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateUserRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/identity/userinfo": {
            "post": {
                "description": "Get user info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "identity"
                ],
                "summary": "Get user info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "IdToken",
                        "name": "idToken",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/identity/verify": {
            "post": {
                "description": "Verify token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "identity"
                ],
                "summary": "Verify token",
                "parameters": [
                    {
                        "description": "VerifyTokenRequest",
                        "name": "verifyTokenRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.VerifyTokenRequest"
                        }
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "dto.CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.VerifyTokenRequest": {
            "type": "object",
            "required": [
                "idToken"
            ],
            "properties": {
                "idToken": {
                    "type": "string"
                }
            }
        },
        "entity.Attraction": {
            "type": "object",
            "properties": {
                "_links": {
                    "$ref": "#/definitions/entity.Links"
                },
                "classifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Classification"
                    }
                },
                "externalLinks": {
                    "$ref": "#/definitions/entity.ExternalLinks"
                },
                "id": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Image"
                    }
                },
                "test": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "upcomingEvents": {
                    "$ref": "#/definitions/entity.UpcomingEvents"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "entity.City": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "entity.Classification": {
            "type": "object",
            "properties": {
                "family": {
                    "type": "boolean"
                },
                "genre": {
                    "$ref": "#/definitions/entity.Genre"
                },
                "primary": {
                    "type": "boolean"
                },
                "segment": {
                    "$ref": "#/definitions/entity.Segment"
                },
                "subGenre": {
                    "$ref": "#/definitions/entity.SubGenre"
                },
                "subType": {
                    "$ref": "#/definitions/entity.SubType"
                },
                "type": {
                    "$ref": "#/definitions/entity.Type"
                }
            }
        },
        "entity.Country": {
            "type": "object",
            "properties": {
                "countryCode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entity.Dates": {
            "type": "object",
            "properties": {
                "spanMultipleDays": {
                    "type": "boolean"
                },
                "start": {
                    "$ref": "#/definitions/entity.StartDate"
                },
                "status": {
                    "$ref": "#/definitions/entity.Status"
                },
                "timezone": {
                    "type": "string"
                }
            }
        },
        "entity.Embedded": {
            "type": "object",
            "properties": {
                "attractions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Attraction"
                    }
                },
                "venues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Venue"
                    }
                }
            }
        },
        "entity.Event": {
            "type": "object",
            "properties": {
                "_embedded": {
                    "$ref": "#/definitions/entity.Embedded"
                },
                "dates": {
                    "$ref": "#/definitions/entity.Dates"
                },
                "id": {
                    "type": "string"
                },
                "locale": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "priceRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.PriceRange"
                    }
                },
                "sales": {
                    "$ref": "#/definitions/entity.Sales"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "entity.EventDetail": {
            "type": "object",
            "properties": {
                "_embedded": {
                    "$ref": "#/definitions/entity.Embedded"
                },
                "_links": {
                    "$ref": "#/definitions/entity.Links"
                },
                "classifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Classification"
                    }
                },
                "dates": {
                    "$ref": "#/definitions/entity.Dates"
                },
                "id": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Image"
                    }
                },
                "locale": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sales": {
                    "$ref": "#/definitions/entity.Sales"
                },
                "test": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "entity.ExternalLinks": {
            "type": "object",
            "properties": {
                "facebook": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Link"
                    }
                },
                "homepage": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Link"
                    }
                },
                "musicbrainz": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Link"
                    }
                },
                "wiki": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Link"
                    }
                }
            }
        },
        "entity.Genre": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "entity.Image": {
            "type": "object",
            "properties": {
                "fallback": {
                    "type": "boolean"
                },
                "height": {
                    "type": "integer"
                },
                "ratio": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "entity.Link": {
            "type": "object",
            "properties": {
                "href": {
                    "type": "string"
                }
            }
        },
        "entity.Links": {
            "type": "object",
            "properties": {
                "attractions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Link"
                    }
                },
                "self": {
                    "$ref": "#/definitions/entity.Link"
                },
                "venues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Link"
                    }
                }
            }
        },
        "entity.PriceRange": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string"
                },
                "max": {
                    "type": "number"
                },
                "min": {
                    "type": "number"
                }
            }
        },
        "entity.PublicSale": {
            "type": "object",
            "properties": {
                "endDateTime": {
                    "type": "string"
                },
                "startDateTime": {
                    "type": "string"
                },
                "startTBA": {
                    "type": "boolean"
                },
                "startTBD": {
                    "type": "boolean"
                }
            }
        },
        "entity.Sales": {
            "type": "object",
            "properties": {
                "public": {
                    "$ref": "#/definitions/entity.PublicSale"
                }
            }
        },
        "entity.Segment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "entity.StartDate": {
            "type": "object",
            "properties": {
                "dateTBA": {
                    "type": "boolean"
                },
                "dateTBD": {
                    "type": "boolean"
                },
                "dateTime": {
                    "type": "string"
                },
                "localDate": {
                    "type": "string"
                },
                "localTime": {
                    "type": "string"
                },
                "noSpecificTime": {
                    "type": "boolean"
                },
                "timeTBA": {
                    "type": "boolean"
                }
            }
        },
        "entity.Status": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "entity.SubGenre": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "entity.SubType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "entity.Type": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "entity.UpcomingEvents": {
            "type": "object",
            "properties": {
                "wts-tr": {
                    "type": "integer"
                }
            }
        },
        "entity.Venue": {
            "type": "object",
            "properties": {
                "city": {
                    "$ref": "#/definitions/entity.City"
                },
                "country": {
                    "$ref": "#/definitions/entity.Country"
                },
                "locale": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "AccessToken": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "scopes": {
                "admin": "Grants read and write access to administrative information",
                "user": "Grants write access"
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:8080",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "GigBuddy API",
	Description:      "GigBuddy API Documentation",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
