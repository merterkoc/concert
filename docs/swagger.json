{
    "swagger": "2.0",
    "info": {
        "description": "GigBuddy API Documentation",
        "title": "GigBuddy API",
        "contact": {},
        "version": "1.0.0"
    },
    "host": "localhost:8080",
    "basePath": "/v1",
    "paths": {
        "/buddy/requests": {
            "get": {
                "security": [
                    {
                        "AccessToken": [
                            "admin",
                            "user"
                        ]
                    }
                ],
                "description": "Retrieve a list of buddy requests for a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buddy"
                ],
                "summary": "Get Buddy Requests",
                "responses": {
                    "200": {
                        "description": "Return buddy requests successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.BuddyRequestDTO"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": [
                            "admin",
                            "user"
                        ]
                    }
                ],
                "description": "Create a buddy request between users for a specific event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buddy"
                ],
                "summary": "Create Buddy Request",
                "parameters": [
                    {
                        "description": "Buddy Request Information",
                        "name": "dto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateBuddyRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/buddy/requests/{id}/accept": {
            "post": {
                "security": [
                    {
                        "AccessToken": [
                            "admin",
                            "user"
                        ]
                    }
                ],
                "description": "Accept a buddy request between users for a specific event. Only the receiver can accept the request.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buddy"
                ],
                "summary": "Accept Buddy Request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Buddy Request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/buddy/requests/{id}/block": {
            "post": {
                "security": [
                    {
                        "AccessToken": [
                            "admin",
                            "user"
                        ]
                    }
                ],
                "description": "Block Buddy Request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buddy"
                ],
                "summary": "Block Buddy Request",
                "operationId": "block-buddy-request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Buddy Request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return buddy request successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.BuddyRequest"
                        }
                    }
                }
            }
        },
        "/buddy/requests/{id}/reject": {
            "post": {
                "security": [
                    {
                        "AccessToken": [
                            "admin",
                            "user"
                        ]
                    }
                ],
                "description": "Reject Buddy Request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buddy"
                ],
                "summary": "Reject Buddy Request",
                "operationId": "reject-buddy-request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Buddy Request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/events": {
            "get": {
                "security": [
                    {
                        "AccessToken": [
                            "admin",
                            "user"
                        ]
                    }
                ],
                "description": "Get event by keyword",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Get event by keyword",
                "operationId": "get-event-by-keyword",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Keyword",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Location",
                        "name": "location",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return event successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.EventDTO"
                        }
                    }
                }
            }
        },
        "/events/user": {
            "get": {
                "security": [
                    {
                        "AccessToken": [
                            "admin",
                            "user"
                        ]
                    }
                ],
                "description": "Get event by user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Get event by user",
                "operationId": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#InvalidIfaceAssignget-event-by-user",
                "responses": {
                    "200": {
                        "description": "Return event detail successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.EventDetail"
                        }
                    }
                }
            }
        },
        "/events/{eventId}/join": {
            "post": {
                "security": [
                    {
                        "AccessToken": [
                            "admin",
                            "user"
                        ]
                    }
                ],
                "description": "Join event",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Join event",
                "operationId": "join-event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "eventId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return event detail successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.EventDetail"
                        }
                    }
                }
            }
        },
        "/events/{eventId}/leave": {
            "post": {
                "security": [
                    {
                        "AccessToken": [
                            "admin",
                            "user"
                        ]
                    }
                ],
                "description": "Leave event",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Leave event",
                "operationId": "leave-event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "eventId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return event detail successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.EventDetail"
                        }
                    }
                }
            }
        },
        "/events/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": [
                            "admin",
                            "user"
                        ]
                    }
                ],
                "description": "Get event by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Get event by id",
                "operationId": "get-event-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return event detail successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.EventDetail"
                        }
                    }
                }
            }
        },
        "/identity/create": {
            "post": {
                "description": "Create user",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "identity"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User's email",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User's password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User's username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "User's profile image",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return user successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.User"
                        }
                    }
                }
            }
        },
        "/identity/profile/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": [
                            "admin",
                            "user"
                        ]
                    }
                ],
                "description": "Get user public profile by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "identity"
                ],
                "summary": "Get user public profile by id",
                "operationId": "get-user-public-profile-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PublicUserProfileDTO"
                        }
                    }
                }
            }
        },
        "/identity/userinfo": {
            "get": {
                "security": [
                    {
                        "AccessToken": [
                            "admin",
                            "user"
                        ]
                    }
                ],
                "description": "Get user info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "identity"
                ],
                "summary": "Get user info",
                "responses": {
                    "200": {
                        "description": "Return user dto successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.UserDto"
                        }
                    }
                }
            }
        },
        "/identity/userinfo/interests": {
            "get": {
                "security": [
                    {
                        "AccessToken": [
                            "admin",
                            "user"
                        ]
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "identity"
                ],
                "summary": "Get all interests",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetAllInterestsResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "AccessToken": [
                            "admin",
                            "user"
                        ]
                    }
                ],
                "description": "The operation to perform on the user's interests (either \"add\" or \"remove\") and the interest's ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "identity"
                ],
                "parameters": [
                    {
                        "description": "PatchUserInterestsRequest",
                        "name": "patchUserInterestsRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PatchUserInterestsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/identity/verify": {
            "post": {
                "description": "Verify token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "identity"
                ],
                "summary": "Verify token",
                "parameters": [
                    {
                        "description": "VerifyTokenRequest",
                        "name": "verifyTokenRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.VerifyTokenRequest"
                        }
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "dto.BuddyRequestDTO": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "receiver_id": {
                    "type": "string"
                },
                "sender_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.CreateBuddyRequestDTO": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "string"
                },
                "receiver_id": {
                    "type": "string"
                }
            }
        },
        "dto.EventDTO": {
            "type": "object",
            "properties": {
                "distance": {
                    "type": "string"
                },
                "end": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "is_joined": {
                    "type": "boolean"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "participant_avatars": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "start": {
                    "type": "string"
                },
                "ticket_url": {
                    "type": "string"
                }
            }
        },
        "dto.GetAllInterestsResponse": {
            "type": "object",
            "properties": {
                "interests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.InterestType"
                    }
                }
            }
        },
        "dto.PatchUserInterestsRequest": {
            "type": "object",
            "required": [
                "interest_id",
                "operation"
            ],
            "properties": {
                "interest_id": {
                    "type": "integer"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "add",
                        "remove"
                    ]
                }
            }
        },
        "dto.PublicUserProfileDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "interests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.InterestType"
                    }
                },
                "user_image": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.UserDto": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "interests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.InterestType"
                    }
                },
                "user_image": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.VerifyTokenRequest": {
            "type": "object",
            "required": [
                "idToken"
            ],
            "properties": {
                "idToken": {
                    "type": "string"
                }
            }
        },
        "entity.Attraction": {
            "type": "object",
            "properties": {
                "_links": {
                    "$ref": "#/definitions/entity.Links"
                },
                "classifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Classification"
                    }
                },
                "externalLinks": {
                    "$ref": "#/definitions/entity.ExternalLinks"
                },
                "id": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Image"
                    }
                },
                "test": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "upcomingEvents": {
                    "$ref": "#/definitions/entity.UpcomingEvents"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "entity.BuddyRequest": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "event_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "receiver": {
                    "$ref": "#/definitions/entity.User"
                },
                "receiver_id": {
                    "type": "string"
                },
                "sender": {
                    "$ref": "#/definitions/entity.User"
                },
                "sender_id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/entity.RequestStatus"
                }
            }
        },
        "entity.Buddyship": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "matched_at": {
                    "type": "string"
                },
                "user1": {
                    "$ref": "#/definitions/entity.User"
                },
                "user1_id": {
                    "type": "string"
                },
                "user2": {
                    "$ref": "#/definitions/entity.User"
                },
                "user2_id": {
                    "type": "string"
                }
            }
        },
        "entity.City": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "entity.Classification": {
            "type": "object",
            "properties": {
                "family": {
                    "type": "boolean"
                },
                "genre": {
                    "$ref": "#/definitions/entity.Genre"
                },
                "primary": {
                    "type": "boolean"
                },
                "segment": {
                    "$ref": "#/definitions/entity.Segment"
                },
                "subGenre": {
                    "$ref": "#/definitions/entity.SubGenre"
                },
                "subType": {
                    "$ref": "#/definitions/entity.SubType"
                },
                "type": {
                    "$ref": "#/definitions/entity.Type"
                }
            }
        },
        "entity.Country": {
            "type": "object",
            "properties": {
                "countryCode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entity.Dates": {
            "type": "object",
            "properties": {
                "spanMultipleDays": {
                    "type": "boolean"
                },
                "start": {
                    "$ref": "#/definitions/entity.StartDate"
                },
                "status": {
                    "$ref": "#/definitions/entity.Status"
                },
                "timezone": {
                    "type": "string"
                }
            }
        },
        "entity.Embedded": {
            "type": "object",
            "properties": {
                "attractions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Attraction"
                    }
                },
                "venues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Venue"
                    }
                }
            }
        },
        "entity.Event": {
            "type": "object",
            "properties": {
                "_embedded": {
                    "$ref": "#/definitions/entity.Embedded"
                },
                "dates": {
                    "$ref": "#/definitions/entity.Dates"
                },
                "id": {
                    "type": "string"
                },
                "locale": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "priceRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.PriceRange"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "entity.EventDetail": {
            "type": "object",
            "properties": {
                "_embedded": {
                    "$ref": "#/definitions/entity.Embedded"
                },
                "_links": {
                    "$ref": "#/definitions/entity.Links"
                },
                "classifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Classification"
                    }
                },
                "dates": {
                    "$ref": "#/definitions/entity.Dates"
                },
                "id": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Image"
                    }
                },
                "locale": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "test": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "entity.ExternalLinks": {
            "type": "object",
            "properties": {
                "facebook": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Link"
                    }
                },
                "homepage": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Link"
                    }
                },
                "musicbrainz": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Link"
                    }
                },
                "wiki": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Link"
                    }
                }
            }
        },
        "entity.Genre": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "entity.Image": {
            "type": "object",
            "properties": {
                "fallback": {
                    "type": "boolean"
                },
                "height": {
                    "type": "integer"
                },
                "ratio": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "entity.InterestType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entity.Link": {
            "type": "object",
            "properties": {
                "href": {
                    "type": "string"
                }
            }
        },
        "entity.Links": {
            "type": "object",
            "properties": {
                "attractions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Link"
                    }
                },
                "self": {
                    "$ref": "#/definitions/entity.Link"
                },
                "venues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Link"
                    }
                }
            }
        },
        "entity.PriceRange": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string"
                },
                "max": {
                    "type": "number"
                },
                "min": {
                    "type": "number"
                }
            }
        },
        "entity.RequestStatus": {
            "type": "string",
            "enum": [
                "pending",
                "accepted",
                "rejected",
                "blocked"
            ],
            "x-enum-varnames": [
                "Pending",
                "Accepted",
                "Rejected",
                "Blocked"
            ]
        },
        "entity.Segment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "entity.StartDate": {
            "type": "object",
            "properties": {
                "dateTBA": {
                    "type": "boolean"
                },
                "dateTBD": {
                    "type": "boolean"
                },
                "dateTime": {
                    "type": "string"
                },
                "localDate": {
                    "type": "string"
                },
                "localTime": {
                    "type": "string"
                },
                "noSpecificTime": {
                    "type": "boolean"
                },
                "timeTBA": {
                    "type": "boolean"
                }
            }
        },
        "entity.Status": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "entity.SubGenre": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "entity.SubType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "entity.Type": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "entity.UpcomingEvents": {
            "type": "object",
            "properties": {
                "wts-tr": {
                    "type": "integer"
                }
            }
        },
        "entity.User": {
            "type": "object",
            "properties": {
                "buddyships_user1": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Buddyship"
                    }
                },
                "buddyships_user2": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Buddyship"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Event"
                    }
                },
                "id": {
                    "type": "string"
                },
                "interests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.InterestType"
                    }
                },
                "role": {
                    "$ref": "#/definitions/enum.Role"
                },
                "user_image": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "entity.Venue": {
            "type": "object",
            "properties": {
                "city": {
                    "$ref": "#/definitions/entity.City"
                },
                "country": {
                    "$ref": "#/definitions/entity.Country"
                },
                "locale": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                }
            }
        },
        "enum.Role": {
            "type": "string",
            "enum": [
                "user",
                "admin"
            ],
            "x-enum-varnames": [
                "User",
                "Admin"
            ]
        }
    },
    "securityDefinitions": {
        "AccessToken": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "scopes": {
                "admin": "Grants read and write access to administrative information",
                "user": "Grants write access"
            }
        }
    }
}